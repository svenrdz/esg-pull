{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"esgpull is a management utility for files and datasets from ESGF 1 . Features \u00b6 Search datasets Exact search with facet:value , combined with free-text search (solr), and the ability to know what facet options remain to be set, make esgpull a handy dataset discovery tool. Free-text search and options Getting all variable_id values and number of datasets from CMIP6 for which both temperature and ocean can be found in the metadata: esgpull search project:CMIP6 \"temperature AND ocean\" --options variable_id [ { 'variable_id' : { 'bigthetao' : 1668 , 'bigthetaoga' : 1692 , ... 'thetao' : 1740 , ... 'tosga' : 434 , 'tossq' : 388 } } ] Exact search Getting the first 3 datasets from CMIP6 for which thetao can be found in the metadata: esgpull search project:CMIP6 thetao --slice 0 :3 Found 1740 datasets. \u250f\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513 \u2503 # \u2503 size \u2503 id \u2503 \u2521\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529 \u2502 0 \u2502 64.0G \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-ESM2-1.piControl.r1i1p1f2.Omon.thetao.gn.v20181115 \u2502 \u2502 1 \u2502 21.3G \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.historical.r2i1p1f2.Omon.thetao.gn.v20181126 \u2502 \u2502 2 \u2502 64.3G \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.piControl.r1i1p1f2.Omon.thetao.gn.v20180814 \u2502 \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Asynchronous downloads Downloads are done concurrently (up to a maximum), maximizing retrieval speed. SQLite database Each download is recorded in a SQLite database Setup \u00b6 Run pip install esgpull to install the latest release and its dependencies. Have a look at the Installation page for more ways to install. Quickstart \u00b6 Jump directly to the Quickstart guide to get to know how to use esgpull . ESGF : https://pcmdi.llnl.gov/ \u21a9","title":"esgpull"},{"location":"#features","text":"Search datasets Exact search with facet:value , combined with free-text search (solr), and the ability to know what facet options remain to be set, make esgpull a handy dataset discovery tool. Free-text search and options Getting all variable_id values and number of datasets from CMIP6 for which both temperature and ocean can be found in the metadata: esgpull search project:CMIP6 \"temperature AND ocean\" --options variable_id [ { 'variable_id' : { 'bigthetao' : 1668 , 'bigthetaoga' : 1692 , ... 'thetao' : 1740 , ... 'tosga' : 434 , 'tossq' : 388 } } ] Exact search Getting the first 3 datasets from CMIP6 for which thetao can be found in the metadata: esgpull search project:CMIP6 thetao --slice 0 :3 Found 1740 datasets. \u250f\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513 \u2503 # \u2503 size \u2503 id \u2503 \u2521\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529 \u2502 0 \u2502 64.0G \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-ESM2-1.piControl.r1i1p1f2.Omon.thetao.gn.v20181115 \u2502 \u2502 1 \u2502 21.3G \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.historical.r2i1p1f2.Omon.thetao.gn.v20181126 \u2502 \u2502 2 \u2502 64.3G \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.piControl.r1i1p1f2.Omon.thetao.gn.v20180814 \u2502 \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Asynchronous downloads Downloads are done concurrently (up to a maximum), maximizing retrieval speed. SQLite database Each download is recorded in a SQLite database","title":"Features"},{"location":"#setup","text":"Run pip install esgpull to install the latest release and its dependencies. Have a look at the Installation page for more ways to install.","title":"Setup"},{"location":"#quickstart","text":"Jump directly to the Quickstart guide to get to know how to use esgpull . ESGF : https://pcmdi.llnl.gov/ \u21a9","title":"Quickstart"},{"location":"installation/","text":"This document covers a few ways to install esgpull , a necessary first step into being able search and download ESGF datasets. pip + github \u00b6 Run this command: pip install git+ssh://git@github.com/svenrdz/esg-pull Get the source code \u00b6 Esgpull is developed and maintained on GitHub, you can clone the public repository: git clone git@github.com:svenrdz/esg-pull The source can now be installed using pip : cd esg-pull python -m pip install . Makefile \u00b6 You can otherwise install the source using the targets defined in the Makefile : make install for a regular installation, make develop to install additional dependencies required for contribution","title":"Installation"},{"location":"installation/#pip-github","text":"Run this command: pip install git+ssh://git@github.com/svenrdz/esg-pull","title":"pip + github"},{"location":"installation/#get-the-source-code","text":"Esgpull is developed and maintained on GitHub, you can clone the public repository: git clone git@github.com:svenrdz/esg-pull The source can now be installed using pip : cd esg-pull python -m pip install .","title":"Get the source code"},{"location":"installation/#makefile","text":"You can otherwise install the source using the targets defined in the Makefile : make install for a regular installation, make develop to install additional dependencies required for contribution","title":"Makefile"},{"location":"quickstart/","text":"esgpull is a tool that simplifies usage of the ESGF Search API for data discovery, and manages procedures related to downloading and storing files from ESGF . Glossary Dataset collection of files . Described by metadata that follows its project's conventions. Facet basic element of a dataset's metadata . Pair of strings in the form name:value , equivalent to a python dictionary's item. Initialisation \u00b6 Before anything, make sure esgpull is correctly installed . Then you can run this next command to fill the database with all facets that can be found in ESGF index nodes. $ esgpull facet init Data discovery \u00b6 There are two ways to search for one or more datasets: facet and free-text search. Both are done through the esgpull search command. Facet search \u00b6 Facet search is performed with all terms using the facet syntax <name>:<value> , for which both name and value are matched exactly. Search CMIP6 datasets esgpull search project:CMIP6 --slice 3 Found 1493626 datasets. \u250f\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513 \u2503 # \u2503 size \u2503 id \u2503 \u2521\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529 \u2502 0 \u2502 10.2G \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.amip.r1i1p1f2.3hr.hfls.gr.v20181203 \u2502 \u2502 1 \u2502 7.3G \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.amip.r1i1p1f2.3hr.clt.gr.v20181203 \u2502 \u2502 2 \u2502 10.3G \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.amip.r1i1p1f2.E3hrPt.cfadLidarsr532.gr.v20181203 \u2502 \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Multiple values for a facet \u00b6 Multiples values can be used, either by specifying the facet name for every value, or by separating each value with a , comma. Single variable c2h2 esgpull search variable_id:c2h2 -0 Found 5 datasets. Single variable c2h6 esgpull search variable_id:c2h6 -0 Found 5 datasets. Both variables c2h2 and c2h6 esgpull search variable_id:c2h2 variable_id:c2h6 -0 Found 10 datasets. What facets can be used? esgpull provides a handy way to print out all facet names: esgpull facet list [ 'Acknowledgement' , 'Campaign' , 'Conventions' , 'Period' , 'Science Driver' , 'access' , 'activity' , 'activity_drs' , 'activity_id' , ... ] Free-text search \u00b6 Free-text search is performed on any term not using the <name>:<value> syntax. Each term is sent to the ESGF search API, which uses Apache Solr to match results. Solr syntax Solr will always try to match any of the search terms. esgpull search surface temperature # will match either `surface` or `temperature` To make sure all the words are matched, terms must be separated with AND and written between quotes esgpull search \"surface AND temperature\" # will match BOTH `surface` and `temperature` Wildcard syntax \u00b6 A wildcard * can be used in both facet (value only) and free-text search, allowing for more controllable search results. Note that on most shells, the wildcard symbol should be inside \" quotes, to escape it from being expanded by the shell before esgpull receives any input. All initializations for areacella variable from piControl experiments esgpull search \"member_id:r1i*p1f1\" table_id:fx variable_id:areacella experiment_id:piControl Found 6 datasets. \u250f\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513 \u2503 # \u2503 size \u2503 id \u2503 \u2521\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529 \u2502 0 \u2502 27.8K \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i2p1f1.fx.areacella.gr.v20190319 \u2502 \u2502 1 \u2502 26.2K \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i1p1f1.fx.areacella.gr.v20180802 \u2502 \u2502 2 \u2502 26.2K \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i1p1f1.fx.areacella.gr.v20181022 \u2502 \u2502 3 \u2502 26.2K \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i1p1f1.fx.areacella.gr.v20181123 \u2502 \u2502 4 \u2502 28.0K \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i1p1f1.fx.areacella.gr.v20200326 \u2502 \u2502 5 \u2502 27.5K \u2502 CMIP6.CMIP.IPSL.IPSL-CM5A2-INCA.piControl.r1i1p1f1.fx.areacella.gr.v20210216 \u2502 \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Case sensitivity \u00b6 For facet search , the case must match exactly, so project:cmip6 will give entirely different results than project:CMIP6 . In the case of free-text search , the opposite is true, case is entirely insensitive, and may lead to funky results. Selection files \u00b6 While the search command is an already powerful tool for data discovery, its limitations come up quite often. Overcoming those limitations is the primary reason for using selection files , a multi-request description syntax. With its subrequests , a selection file is conceptually similar to a single-level tree structure , for which each subrequest is a leaf that specializes the root request. The number of requests sent to ESGF after expanding the subrequests is equal to the number of subrequests . A selection file is written using either Yaml/1.0 or Json , Yaml is recommended for its human-readable syntax. Syntax Rules key/value pair \u21d2 facet search term Yaml <name> : <values> Json { \"<name>\" : \"<values>\" } query keyword \u21d2 free-text Yaml query : <free-text> Json { \"query\" : \"<free-text>\" } requests keyword \u21d2 subrequest list Yaml requests : - <request_1> - <request_2> Json { \"requests\" : [ \"<request_1>\" , \"<request_2>\" ] } subrequests accept only facets or free-text (nesting disallowed) Yaml requests : - <name_1> : <values_1> <name_2> : <values_2> query : <free-text> Json { \"requests\" : [ { \"<name_1>\" : \"<values_1>\" , \"<name_2>\" : \"<values_2>\" , \"query\" : \"<free-text>\" } ] } each subquery inherits the root request terms Yaml <name_1> : <values_1> requests : - <name_2> : <values_2> - <name_3> : <values_3> - query : <free-text> Json { \"<name_1>\" : \"<values_1>\" , \"requests\" : [ { \"<name_2>\" : \"<values_2>\" }, { \"<name_3>\" : \"<values_3>\" }, { \"query\" : \"<free-text>\" } ] } Expanded query 1 <name_1> : <values_1> <name_2> : <values_2> Expanded query 1 { \"<name_1>\" : \"<values_1>\" , \"<name_2>\" : \"<values_2>\" } Expanded query 2 <name_1> : <values_1> <name_3> : <values_3> Expanded query 2 { \"<name_1>\" : \"<values_1>\" , \"<name_3>\" : \"<values_3>\" } Expanded query 3 <name_1> : <values_1> query : <free-text> Expanded query 3 { \"<name_1>\" : \"<values_1>\" , \"query\" : \"<free-text>\" } prefixing a name with + \u21d2 append values to the root request homonym term Yaml <name_1> : <values_1> requests : - <name_1> : <values_replaced> <name_2> : <values_2> - +<name_1> : <values_appended> - <name_3> : <values_3> Json { \"<name_1>\" : \"<values_1>\" , \"requests\" : [ { \"<name_1>\" : \"<values_replaced>\" , \"<name_2>\" : \"<values_2>\" }, { \"+<name_1>\" : \"<values_appended>\" }, { \"<name_3>\" : \"<values_3>\" } ] } Expanded request 1 <name_1> : <values_replaced> <name_2> : <values_2> Expanded request 1 { \"<name_1>\" : \"<values_replaced>\" , \"<name_2>\" : \"<values_2>\" } Expanded request 2 <name_1> : <values_1>,<values_appended> Expanded request 2 { \"<name_1>\" : \"<values_1>,<values_appended>\" } Expanded request 3 <name_1> : <values_1> <name_3> : <values_3> Expanded request 3 { \"<name_1>\" : \"<values_1>\" , \"<name_3>\" : \"<values_3>\" } Selection file for IPCC experiments on surface temperatures surface_temperature.yaml query : \"surface AND temperature\" requests : - project : CMIP5 experiment : \"rcp*\" - project : CMIP6 experiment_id : \"ssp*\" Search with selection file esgpull search --selection-file surface_temperature.yaml --one Found 2346 datasets. \u250f\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513 \u2503 # \u2503 size \u2503 id \u2503 \u2521\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529 \u2502 0 \u2502 338.9G \u2502 cmip5.output1.CNRM-CERFACS.CNRM-CM5.rcp26.day.atmos.day.r1i1p1.v20121001 \u2502 \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Synda users Since the syntax is completely different from synda selection files, the translate tool is provided. It will handle most common cases, and for the others , a few manual adjustments should fix it. Downloading \u00b6","title":"Quickstart"},{"location":"quickstart/#initialisation","text":"Before anything, make sure esgpull is correctly installed . Then you can run this next command to fill the database with all facets that can be found in ESGF index nodes. $ esgpull facet init","title":"Initialisation"},{"location":"quickstart/#data-discovery","text":"There are two ways to search for one or more datasets: facet and free-text search. Both are done through the esgpull search command.","title":"Data discovery"},{"location":"quickstart/#facet-search","text":"Facet search is performed with all terms using the facet syntax <name>:<value> , for which both name and value are matched exactly. Search CMIP6 datasets esgpull search project:CMIP6 --slice 3 Found 1493626 datasets. \u250f\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513 \u2503 # \u2503 size \u2503 id \u2503 \u2521\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529 \u2502 0 \u2502 10.2G \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.amip.r1i1p1f2.3hr.hfls.gr.v20181203 \u2502 \u2502 1 \u2502 7.3G \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.amip.r1i1p1f2.3hr.clt.gr.v20181203 \u2502 \u2502 2 \u2502 10.3G \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.amip.r1i1p1f2.E3hrPt.cfadLidarsr532.gr.v20181203 \u2502 \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518","title":"Facet search"},{"location":"quickstart/#multiple-values-for-a-facet","text":"Multiples values can be used, either by specifying the facet name for every value, or by separating each value with a , comma. Single variable c2h2 esgpull search variable_id:c2h2 -0 Found 5 datasets. Single variable c2h6 esgpull search variable_id:c2h6 -0 Found 5 datasets. Both variables c2h2 and c2h6 esgpull search variable_id:c2h2 variable_id:c2h6 -0 Found 10 datasets. What facets can be used? esgpull provides a handy way to print out all facet names: esgpull facet list [ 'Acknowledgement' , 'Campaign' , 'Conventions' , 'Period' , 'Science Driver' , 'access' , 'activity' , 'activity_drs' , 'activity_id' , ... ]","title":"Multiple values for a facet"},{"location":"quickstart/#free-text-search","text":"Free-text search is performed on any term not using the <name>:<value> syntax. Each term is sent to the ESGF search API, which uses Apache Solr to match results. Solr syntax Solr will always try to match any of the search terms. esgpull search surface temperature # will match either `surface` or `temperature` To make sure all the words are matched, terms must be separated with AND and written between quotes esgpull search \"surface AND temperature\" # will match BOTH `surface` and `temperature`","title":"Free-text search"},{"location":"quickstart/#wildcard-syntax","text":"A wildcard * can be used in both facet (value only) and free-text search, allowing for more controllable search results. Note that on most shells, the wildcard symbol should be inside \" quotes, to escape it from being expanded by the shell before esgpull receives any input. All initializations for areacella variable from piControl experiments esgpull search \"member_id:r1i*p1f1\" table_id:fx variable_id:areacella experiment_id:piControl Found 6 datasets. \u250f\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513 \u2503 # \u2503 size \u2503 id \u2503 \u2521\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529 \u2502 0 \u2502 27.8K \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i2p1f1.fx.areacella.gr.v20190319 \u2502 \u2502 1 \u2502 26.2K \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i1p1f1.fx.areacella.gr.v20180802 \u2502 \u2502 2 \u2502 26.2K \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i1p1f1.fx.areacella.gr.v20181022 \u2502 \u2502 3 \u2502 26.2K \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i1p1f1.fx.areacella.gr.v20181123 \u2502 \u2502 4 \u2502 28.0K \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i1p1f1.fx.areacella.gr.v20200326 \u2502 \u2502 5 \u2502 27.5K \u2502 CMIP6.CMIP.IPSL.IPSL-CM5A2-INCA.piControl.r1i1p1f1.fx.areacella.gr.v20210216 \u2502 \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518","title":"Wildcard syntax"},{"location":"quickstart/#case-sensitivity","text":"For facet search , the case must match exactly, so project:cmip6 will give entirely different results than project:CMIP6 . In the case of free-text search , the opposite is true, case is entirely insensitive, and may lead to funky results.","title":"Case sensitivity"},{"location":"quickstart/#selection-files","text":"While the search command is an already powerful tool for data discovery, its limitations come up quite often. Overcoming those limitations is the primary reason for using selection files , a multi-request description syntax. With its subrequests , a selection file is conceptually similar to a single-level tree structure , for which each subrequest is a leaf that specializes the root request. The number of requests sent to ESGF after expanding the subrequests is equal to the number of subrequests . A selection file is written using either Yaml/1.0 or Json , Yaml is recommended for its human-readable syntax. Syntax Rules key/value pair \u21d2 facet search term Yaml <name> : <values> Json { \"<name>\" : \"<values>\" } query keyword \u21d2 free-text Yaml query : <free-text> Json { \"query\" : \"<free-text>\" } requests keyword \u21d2 subrequest list Yaml requests : - <request_1> - <request_2> Json { \"requests\" : [ \"<request_1>\" , \"<request_2>\" ] } subrequests accept only facets or free-text (nesting disallowed) Yaml requests : - <name_1> : <values_1> <name_2> : <values_2> query : <free-text> Json { \"requests\" : [ { \"<name_1>\" : \"<values_1>\" , \"<name_2>\" : \"<values_2>\" , \"query\" : \"<free-text>\" } ] } each subquery inherits the root request terms Yaml <name_1> : <values_1> requests : - <name_2> : <values_2> - <name_3> : <values_3> - query : <free-text> Json { \"<name_1>\" : \"<values_1>\" , \"requests\" : [ { \"<name_2>\" : \"<values_2>\" }, { \"<name_3>\" : \"<values_3>\" }, { \"query\" : \"<free-text>\" } ] } Expanded query 1 <name_1> : <values_1> <name_2> : <values_2> Expanded query 1 { \"<name_1>\" : \"<values_1>\" , \"<name_2>\" : \"<values_2>\" } Expanded query 2 <name_1> : <values_1> <name_3> : <values_3> Expanded query 2 { \"<name_1>\" : \"<values_1>\" , \"<name_3>\" : \"<values_3>\" } Expanded query 3 <name_1> : <values_1> query : <free-text> Expanded query 3 { \"<name_1>\" : \"<values_1>\" , \"query\" : \"<free-text>\" } prefixing a name with + \u21d2 append values to the root request homonym term Yaml <name_1> : <values_1> requests : - <name_1> : <values_replaced> <name_2> : <values_2> - +<name_1> : <values_appended> - <name_3> : <values_3> Json { \"<name_1>\" : \"<values_1>\" , \"requests\" : [ { \"<name_1>\" : \"<values_replaced>\" , \"<name_2>\" : \"<values_2>\" }, { \"+<name_1>\" : \"<values_appended>\" }, { \"<name_3>\" : \"<values_3>\" } ] } Expanded request 1 <name_1> : <values_replaced> <name_2> : <values_2> Expanded request 1 { \"<name_1>\" : \"<values_replaced>\" , \"<name_2>\" : \"<values_2>\" } Expanded request 2 <name_1> : <values_1>,<values_appended> Expanded request 2 { \"<name_1>\" : \"<values_1>,<values_appended>\" } Expanded request 3 <name_1> : <values_1> <name_3> : <values_3> Expanded request 3 { \"<name_1>\" : \"<values_1>\" , \"<name_3>\" : \"<values_3>\" } Selection file for IPCC experiments on surface temperatures surface_temperature.yaml query : \"surface AND temperature\" requests : - project : CMIP5 experiment : \"rcp*\" - project : CMIP6 experiment_id : \"ssp*\" Search with selection file esgpull search --selection-file surface_temperature.yaml --one Found 2346 datasets. \u250f\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513 \u2503 # \u2503 size \u2503 id \u2503 \u2521\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529 \u2502 0 \u2502 338.9G \u2502 cmip5.output1.CNRM-CERFACS.CNRM-CM5.rcp26.day.atmos.day.r1i1p1.v20121001 \u2502 \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Synda users Since the syntax is completely different from synda selection files, the translate tool is provided. It will handle most common cases, and for the others , a few manual adjustments should fix it.","title":"Selection files"},{"location":"quickstart/#downloading","text":"","title":"Downloading"},{"location":"reference/","text":"Importing Esgpull from esgpull import Esgpull esg = Esgpull () # (1) The call instanciates all required submodules ( fs , db , etc.)","title":"Reference"},{"location":"usage/","text":"\u203a esgpull --help Usage: esgpull [ OPTIONS ] COMMAND [ ARGS ] ... Options: -v, --version Show the version and exit. -h, --help Show this message and exit. Commands: autoremove download get install login facet remove retry search settings upgrade Facets \u00b6 Initialisation \u00b6 You can initialise the database's param table, with facets' names and values using the following: Fetch facets The complete list of facets (names and values) must first be fetched. CLI Python esgpull facet init from esgpull import Esgpull esgpull = Esgpull () if esgpull . fetch_params (): print ( \"Params are initialised.\" ) You can list all facets with: List facet names CLI Python esgpull facet list from esgpull import Esgpull , Param esgpull = Esgpull () with esgpull . db . select ( Param . name ) as stmt : print ( stmt . distinct () . scalars ) Running a Query \u00b6 The Query class is the way to send bulk queries to the ESGF Search API. It is a representation for describing sets of constrained facets, or [NAME:[Value1,Value2,...]].","title":"Usage"},{"location":"usage/#facets","text":"","title":"Facets"},{"location":"usage/#initialisation","text":"You can initialise the database's param table, with facets' names and values using the following: Fetch facets The complete list of facets (names and values) must first be fetched. CLI Python esgpull facet init from esgpull import Esgpull esgpull = Esgpull () if esgpull . fetch_params (): print ( \"Params are initialised.\" ) You can list all facets with: List facet names CLI Python esgpull facet list from esgpull import Esgpull , Param esgpull = Esgpull () with esgpull . db . select ( Param . name ) as stmt : print ( stmt . distinct () . scalars )","title":"Initialisation"},{"location":"usage/#running-a-query","text":"The Query class is the way to send bulk queries to the ESGF Search API. It is a representation for describing sets of constrained facets, or [NAME:[Value1,Value2,...]].","title":"Running a Query"}]}