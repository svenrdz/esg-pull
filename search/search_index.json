{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p><code>esgpull</code> is a modern ESGF data management tool, bundled with a custom asynchronous interface with the ESGF Search API. It handles scanning, downloading and updating datasets, files and queries from ESGF.</p>"},{"location":"#feature-highlight","title":"Feature highlight","text":"<ul> <li>Simple syntax for fast data exploration</li> <li>Asynchronous download</li> <li>Highly configurable</li> </ul> <p>Search datasets</p> <p><code>esgpull</code> allows multiple ways for searching ESGF data, with facet and free-text terms together with options.</p> Facet termsFree-text termsFacets hintsHintsFiner grain queryDate filter <p>Query every CMIP6 dataset using facet syntax<pre><code>esgpull search project:CMIP6\n</code></pre> </p> <p>Narrow down the results with free-text term 'temperature'<pre><code>esgpull search project:CMIP6 temperature\n</code></pre> </p> <p>Find out which facets remain to be set with --facets<pre><code>esgpull search project:CMIP6 temperature --facets\n</code></pre> </p> <p>Get every potential facet value for the current query with --hints<pre><code>esgpull search project:CMIP6 temperature --hints variable_id\n</code></pre> </p> <p>Query all CMIP6 datasets with variable 'tas'<pre><code>esgpull search project:CMIP6 variable_id:tas\n</code></pre> </p> <p>Query CMIP6 datasets with variable 'tas' published since Jan 1st, 2023<pre><code>esgpull search project:CMIP6 variable_id:tas --from 2023-01-01\n</code></pre> </p> <p>Asynchronous downloads</p> <p>Downloads are done concurrently (up to a maximum) such that retrieval speed is maximized.</p> <p>SQLite database</p> <p>Each download is recorded in a SQLite database</p>"},{"location":"#setup","title":"Setup","text":"<p>Run <code>pip install esgpull</code> to install the latest release and its dependencies.</p> <p>Have a look at the Installation page for more ways to install.</p>"},{"location":"#quickstart","title":"Quickstart","text":"<p>Jump directly to the Quickstart guide to get to know how to use <code>esgpull</code>.</p>"},{"location":"db_schema/","title":"Db schema","text":""},{"location":"db_schema/#avant-file-centric","title":"Avant (file-centric)","text":"<pre><code>erDiagram\n  file {\n    int id PK\n    string file_id \"UNIQUE\"\n    string dataset_id\n    string master_id\n    string url\n    string version\n    string filename\n    string local_path\n    string data_node\n    string checksum\n    string checksum_type\n    int size\n    enum status \"queued started done error cancelled\"\n    json raw\n    datetime last_updated\n  }\n\n  param {\n    int id PK\n    string name\n    string value\n    datetime last_updated\n  }\n\n  version {\n    string version_num PK\n  }</code></pre>"},{"location":"db_schema/#apres-query-centric","title":"Apres (query-centric)","text":""},{"location":"db_schema/#mcd","title":"MCD","text":"<pre><code>erDiagram\n  options {\n    VARCHAR distrib\n    VARCHAR latest\n    VARCHAR replica\n    VARCHAR retracted\n    INTEGER id PK\n    VARCHAR sha\n  }\n\n  facet {\n    VARCHAR name\n    VARCHAR value\n    INTEGER id PK\n    VARCHAR sha\n  }\n\n  select {\n    INTEGER id PK\n    VARCHAR sha\n  }\n\n  file {\n    VARCHAR file_id\n    VARCHAR dataset_id\n    VARCHAR master_id\n    VARCHAR url\n    VARCHAR version\n    VARCHAR filename\n    VARCHAR local_path\n    VARCHAR data_node\n    VARCHAR checksum\n    VARCHAR checksum_type\n    INTEGER size\n    VARCHAR status\n    INTEGER id PK\n    VARCHAR sha\n  }\n\n  tag {\n    VARCHAR name\n    TEXT description\n    INTEGER id PK\n    VARCHAR sha\n  }\n\n  query {\n    BOOLEAN tracked\n    VARCHAR require\n    INTEGER options_id FK\n    INTEGER select_id FK\n    INTEGER id PK\n    VARCHAR sha\n  }\n\n  query  }|--|| options : \"has\"\n  query  }|--|| select : \"selects\"\n  tag  }o--|{ query : \"describes\"\n  query  }|--|{ file : \"represents\"\n  select  }|--|{ facet : \"with\"</code></pre>"},{"location":"db_schema/#mld","title":"MLD","text":"<pre><code>erDiagram\n\n  options {\n    VARCHAR distrib\n    VARCHAR latest\n    VARCHAR replica\n    VARCHAR retracted\n    INTEGER id PK\n    VARCHAR sha\n  }\n\n  facet {\n    VARCHAR name\n    VARCHAR value\n    INTEGER id PK\n    VARCHAR sha\n  }\n\n  select_facet {\n    INTEGER select_id PK\n    INTEGER facet_id PK\n  }\n\n  select {\n    INTEGER id PK\n    VARCHAR sha\n  }\n\n  file {\n    VARCHAR file_id\n    VARCHAR dataset_id\n    VARCHAR master_id\n    VARCHAR url\n    VARCHAR version\n    VARCHAR filename\n    VARCHAR local_path\n    VARCHAR data_node\n    VARCHAR checksum\n    VARCHAR checksum_type\n    INTEGER size\n    VARCHAR status\n    INTEGER id PK\n    VARCHAR sha\n  }\n\n  query_file {\n    INTEGER query_id PK\n    INTEGER file_id PK\n  }\n\n  query_tag {\n    INTEGER query_id PK\n    INTEGER tag_id PK\n  }\n\n  tag {\n    VARCHAR name\n    TEXT description\n    INTEGER id PK\n    VARCHAR sha\n  }\n\n  query {\n    BOOLEAN tracked\n    VARCHAR require\n    INTEGER options_id FK\n    INTEGER select_id FK\n    INTEGER id PK\n    VARCHAR sha\n  }\n\n  options  }|--|| query : \"options_id\"\n  select  }|--|| query : \"select_id\"\n  tag  }|--|| query_tag : \"tag_id\"\n  query  }|--|| query_tag : \"query_id\"\n  query  }|--|| query_file : \"query_id\"\n  file  }|--|| query_file : \"file_id\"\n  select  }|--|| select_facet : \"select_id\"\n  facet  }|--|| select_facet : \"facet_id\"</code></pre>"},{"location":"db_schema/#exemple-de-queries","title":"Exemple de queries","text":"<pre><code>- name: main\noptions:\ndistrib: false\nlatest: true\nrequire: null\nselect:\nensemble: r1i1p1\nproject: CMIP5\nrealm: atmos\ntracked: false\n- name: day\noptions: {}\nrequire: main\nselect:\ntime_frequency: day\ntracked: false\n- name: rcp26\noptions: {}\nrequire: main\nselect:\nexperiment: rcp26\ntime_frequency: mon\nvariable: tasmin\ntracked: true\n- name: tasmax\noptions: {}\nrequire: day\nselect:\nexperiment: historical\nvariable: tasmax\ntracked: true\n- name: tasmax_monfx\noptions: {}\nrequire: main\nselect:\ntime_frequency:\n- mon\n- fx\nvariable: tasmax\ntracked: true\n- name: rcp85\noptions: {}\nrequire: day\nselect:\nexperiment: rcp85\nvariable:\n- tas\n- ua\ntracked: true\n- name: other\noptions: {}\nrequire: null\nselect:\nproject: CMIP6\ntracked: true\n</code></pre> <pre><code> ========== FULL GRAPH ========== main &lt;untracked&gt;\n\u2502 distrib: False\n\u2502 latest: True\n\u2502 project: CMIP5\n\u2502 ensemble: r1i1p1\n\u2502 realm: atmos\n\u251c\u2500\u2500 day &lt;untracked&gt;\n\u2502   \u2502 time_frequency: day\n\u2502   \u251c\u2500\u2500 tasmax\n\u2502   \u2502   \u2502 experiment: historical\n\u2502   \u2502   \u2502 variable: tasmax\n\u2502   \u2514\u2500\u2500 rcp85\n\u2502       \u2502 experiment: rcp85\n\u2502       \u2502 variable:\n\u2502       \u2502   - tas\n\u2502       \u2502   - ua\n\u251c\u2500\u2500 rcp26\n\u2502   \u2502 experiment: rcp26\n\u2502   \u2502 time_frequency: mon\n\u2502   \u2502 variable: tasmin\n\u2514\u2500\u2500 tasmax_monfx\n    \u2502 time_frequency:\n    \u2502   - mon\n    \u2502   - fx\n    \u2502 variable: tasmax\nother\n\u2502 project: CMIP6\n========== SUBGRAPH FROM day ========== day &lt;untracked&gt; [require: main]\n\u2502 time_frequency: day\n\u251c\u2500\u2500 tasmax\n\u2502   \u2502 experiment: historical\n\u2502   \u2502 variable: tasmax\n\u2514\u2500\u2500 rcp85\n    \u2502 experiment: rcp85\n    \u2502 variable:\n    \u2502   - tas\n    \u2502   - ua\n</code></pre>"},{"location":"download/","title":"Download","text":"<p>With <code>esgpull</code>, downloading files is done as a two-step process:</p> <ul> <li><code>install</code> to fetch the files' metadata and add them to the queue, and discard those that have already been queued or downloaded previously.</li> <li><code>download start</code> to fire a blocking shell process that downloads all queued files asynchronously.</li> </ul> <p>Example selection file<p>To ease on the readability, each command throughout this page uses the following selection files.</p> <p>They can be found in the <code>examples/selection_files</code> directory.</p> download_example_small.yaml<pre><code>mip_era: CMIP6\nexperiment_id: piControl\ntable_id: Ofx\nmember_id: r1i1p1f1\n</code></pre> download_example_large.yaml<pre><code>experiment_id: historical\nmember_id: r1i1p1f1\nmip_era: CMIP6\ntable_id: Eday\nvariable_id: ts\n</code></pre> </p>"},{"location":"download/#install","title":"Install","text":"<p>Once a <code>search</code> command yields satisfying results \u2014 ideally the smallest set of files that meets needs \u2014 then downloading is trivial using an <code>install</code> command, since the <code>install</code> syntax is exactly the same as for a <code>search</code> command.</p> <p>Example search command<pre><code>esgpull search --selection-file download_example_small.yaml\n</code></pre> <pre><code>Found 13 datasets.\n     \u2577          \u2577                                                           \n   # \u2502     size \u2502 id                                                        \n\u2576\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2574\n   0 \u2502   1.5 MB \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i1p1f1.Ofx.bas\u2026  \n   1 \u2502   1.5 MB \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i1p1f1.Ofx.bas\u2026  \n   2 \u2502   1.7 MB \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i1p1f1.Ofx.hfg\u2026  \n   3 \u2502   1.7 MB \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i1p1f1.Ofx.hfg\u2026  \n   4 \u2502   1.7 MB \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i1p1f1.Ofx.hfg\u2026  \n   5 \u2502   1.5 MB \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i1p1f1.Ofx.are\u2026  \n   6 \u2502   1.5 MB \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i1p1f1.Ofx.are\u2026  \n   7 \u2502   1.5 MB \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i1p1f1.Ofx.are\u2026  \n   8 \u2502   1.5 MB \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i1p1f1.Ofx.bas\u2026  \n   9 \u2502   1.6 MB \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i1p1f1.Ofx.are\u2026  \n  10 \u2502   1.5 MB \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i1p1f1.Ofx.bas\u2026  \n  11 \u2502   1.7 MB \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i1p1f1.Ofx.hfg\u2026  \n  12 \u2502 329.9 kB \u2502 CMIP6.CMIP.IPSL.IPSL-CM5A2-INCA.piControl.r1i1p1f1.Ofx.\u2026  \n     \u2575          \u2575 \n</code></pre></p> <p>Replace search by install<pre><code>esgpull install --selection-file download_example_small.yaml\n</code></pre> <pre><code>Found 16 files.\nDropped 3 duplicates.\nTotal size: 19.0 MB\nContinue? [Y/n]: \nInstalled 13 new files.\n</code></pre></p> <p>Search options<p>Some <code>search</code> options do not work with the <code>install</code> command.</p> <p>That includes the <code>--file</code> to display files instead of datasets, since <code>install</code> assumes only files can be downloaded.</p> <p>Failing install command<pre><code>esgpull install --selection-file download_example_small.yaml --file\n</code></pre> <pre><code>Error: No such option: --file\n</code></pre></p> </p>"},{"location":"download/#download-process","title":"Download process","text":"<p>After installing any number of files, downloading is simple:</p> <p><pre><code># Using the following example install command:\nesgpull install --selection-file download_example_small.yaml\n\n# Download files with:\nesgpull download\n</code></pre> <pre><code>[15:18:37] \u2713 id:1767 \u00b7 329.9 kB \u00b7 5.4 MB/s                    esgpull.py:202\n           \u2713 id:1768 \u00b7 1.5 MB \u00b7 11.4 MB/s                     esgpull.py:202\n           \u2713 id:1769 \u00b7 1.5 MB \u00b7 9.3 MB/s                      esgpull.py:202\n[15:18:38] \u2713 id:1770 \u00b7 1.5 MB \u00b7 8.1 MB/s                      esgpull.py:202\n           \u2713 id:1771 \u00b7 1.6 MB \u00b7 6.6 MB/s                      esgpull.py:202\n           \u2713 id:1772 \u00b7 1.5 MB \u00b7 7.1 MB/s                      esgpull.py:202\n           \u2713 id:1773 \u00b7 1.5 MB \u00b7 7.2 MB/s                      esgpull.py:202\n           \u2713 id:1774 \u00b7 1.5 MB \u00b7 7.0 MB/s                      esgpull.py:202\n           \u2713 id:1775 \u00b7 1.5 MB \u00b7 6.9 MB/s                      esgpull.py:202\n           \u2713 id:1776 \u00b7 1.7 MB \u00b7 7.8 MB/s                      esgpull.py:202\n           \u2713 id:1777 \u00b7 1.7 MB \u00b7 8.1 MB/s                      esgpull.py:202\n           \u2713 id:1778 \u00b7 1.7 MB \u00b7 9.9 MB/s                      esgpull.py:202\n           \u2713 id:1779 \u00b7 1.7 MB \u00b7 11.7 MB/s                     esgpull.py:202\n  13/13 00:00\nDownloaded 13 new files for a total size of 19.0 MB\n</code></pre></p>"},{"location":"download/#configuration","title":"Configuration","text":"<p>RAM usage for downloads is bounded by the following formula:</p> <pre><code>RAM = Config::download.max_concurrent * Config::download.chunk_size\n</code></pre>"},{"location":"download/#failed-downloads","title":"Failed downloads","text":"<p>For each failed download, their status will be set to error.</p> <p>Those can be put back to the download queue, by using the <code>retry</code> command.</p> <p><pre><code>esgpull retry --help\n</code></pre> <pre><code>Usage: esgpull retry [OPTIONS] [[new|queued|starting|started|pausing|paused|\nerror|cancelled|done]]...\n</code></pre></p> <p>Cancelled download</p> <p>If <code>esgpull</code> has been stopped with with Ctrl+C while downloading, all incomplete downloads will have the <code>cancelled</code> status.</p> <p>By default, <code>retry</code> will put both error and cancelled downloads back to the queue.</p> <p>Unexpected errors</p> <p>Some unexpected errors might break <code>esgpull</code>. In this case, the downloads will stay in a transient status starting.</p> <p>The <code>retry</code> command will not send those to the queue by default. It can still be done using either:</p> <ul> <li><code>esgpull retry starting</code> to send only those back to the queue</li> <li><code>esgpull retry --all</code> to send every download back to the queue (except <code>done</code> downloads of course)</li> </ul>"},{"location":"installation/","title":"Installation","text":"<p>This document covers a few ways to install <code>esgpull</code>, a necessary first step into being able search and download ESGF datasets.</p>"},{"location":"installation/#conda","title":"conda","text":"<p>The recommended way to install using <code>conda</code> is to create a fresh environment using <code>python &gt;= 3.10</code>, then install the package with both <code>conda-forge</code> and <code>ipsl</code> channels:</p> Install esgpull on a fresh conda environment<pre><code>conda create -n esgpull python=3.10\nconda activate esgpull\nconda install esgpull -c conda-forge -c ipsl\n</code></pre>"},{"location":"installation/#pip","title":"pip","text":"<p>Run this command:</p> Install esgpull from pip<pre><code>pip install https://github.com/svenrdz/esg-pull.git\n</code></pre> <p>Initialize the database and working directories</p> <p>The <code>self install</code> command sets up the directories and files required for <code>esgpull</code> to work correctly.</p> <p>It also fetches and stores the full vocabulary of facets from ESGF index nodes and store it locally.</p> <p>It will take a few minutes to complete but only needs to be run once.</p> <pre><code>esgpull self install\n</code></pre>"},{"location":"installation/#get-the-source-code","title":"Get the source code","text":"<p>Esgpull is developed and maintained on GitHub, you can clone the public repository:</p> <pre><code>git clone https://github.com/svenrdz/esg-pull.git\n</code></pre> <p>The source can now be installed using <code>pip</code>:</p> <pre><code>cd esg-pull\npython -m pip install .\n</code></pre>"},{"location":"queries/","title":"Queries","text":"<p>Queries are first-class in esgpull.</p>"},{"location":"queries/#database-schema","title":"Database schema","text":"<p>For reference</p> <pre><code>erDiagram\n\n  query {\n    BOOLEAN tracked\n    VARCHAR require\n    VARCHAR options_sha FK\n    VARCHAR select_sha FK\n    VARCHAR sha PK\n  }\n\n  options {\n    VARCHAR distrib\n    VARCHAR latest\n    VARCHAR replica\n    VARCHAR retracted\n    VARCHAR sha PK\n  }\n\n  select {\n    VARCHAR sha PK\n  }\n\n  select_facet {\n    VARCHAR select_sha PK\n    VARCHAR facet_sha PK\n  }\n\n  facet {\n    VARCHAR name\n    VARCHAR value\n    VARCHAR sha PK\n  }\n\n  query_tag {\n    VARCHAR query_sha PK\n    VARCHAR tag_sha PK\n  }\n\n  tag {\n    VARCHAR name\n    TEXT description\n    VARCHAR sha PK\n  }\n\n  query_file {\n    VARCHAR query_sha PK\n    VARCHAR file_sha PK\n  }\n\n  file {\n    VARCHAR file_id\n    VARCHAR dataset_id\n    VARCHAR master_id\n    VARCHAR url\n    VARCHAR version\n    VARCHAR filename\n    VARCHAR local_path\n    VARCHAR data_node\n    VARCHAR checksum\n    VARCHAR checksum_type\n    INTEGER size\n    VARCHAR status\n    VARCHAR sha PK\n  }\n\n  query ||--|{ options : \"options_sha\"\n  query ||--|{ select : \"select_sha\"\n  select  }|--|| select_facet : \"select_sha\"\n  select_facet ||--|{ facet : \"facet_sha\"\n  query  }|--|| query_tag : \"query_sha\"\n  query_tag ||--|{ tag : \"tag_sha\"\n  query  }|--|| query_file : \"query_sha\"\n  query_file ||--|{ file : \"file_sha\"</code></pre>"},{"location":"quickstart/","title":"Quickstart","text":"<p><code>esgpull</code> is a tool that simplifies usage of the ESGF Search API for data discovery, and manages procedures related to downloading and storing files from ESGF.</p> <p>Before anything, make sure <code>esgpull</code> is correctly installed.</p> <p>Glossary</p> Dataset collection of files. Described by metadata that follows its project's conventions. Facet basic element of a dataset's metadata. Pair of strings in the form <code>name:value</code>, equivalent to a python dictionary's item."},{"location":"quickstart/#data-discovery","title":"Data discovery","text":"<p>Look at the data discovery page for more information.</p>"},{"location":"quickstart/#downloading","title":"Downloading","text":"<p>Loop at the download page for more information.</p>"},{"location":"search/","title":"Data discovery","text":"<p>There are two ways to search for one or more datasets: facet and free-text search. Both are done through the <code>esgpull search</code> command.</p>"},{"location":"search/#facet-search","title":"Facet search","text":"<p>Facet search is performed with all terms using the facet syntax <code>&lt;name&gt;:&lt;value&gt;</code>, for which both name and value are matched exactly.</p> <p>Search CMIP6 datasets<pre><code>esgpull search project:CMIP6 --slice 3\n</code></pre> <pre><code>Found 1539146 datasets.\n    \u2577         \u2577                                                             \n  # \u2502    size \u2502 id                                                          \n\u2576\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2574\n  0 \u2502 10.9 GB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.amip.r1i1p1f2.3hr.hfls\u2026  \n  1 \u2502  7.9 GB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.amip.r1i1p1f2.3hr.clt.\u2026  \n  2 \u2502 11.1 GB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.amip.r1i1p1f2.E3hrPt.c\u2026  \n    \u2575         \u2575\n</code></pre></p>"},{"location":"search/#multiple-values-for-a-facet","title":"Multiple values for a facet","text":"<p>Multiples values can be used, either by specifying the facet name for every value, or by separating each value with a <code>,</code> comma.</p> Single variable c2h2<pre><code>esgpull search variable_id:c2h2 -0\n</code></pre> <pre><code>Found 5 datasets.\n</code></pre> Single variable c2h6<pre><code>esgpull search variable_id:c2h6 -0\n</code></pre> <pre><code>Found 5 datasets.\n</code></pre> <p>Both variables c2h2 and c2h6<pre><code>esgpull search variable_id:c2h2 variable_id:c2h6 -0\n</code></pre> <pre><code>Found 10 datasets.\n</code></pre></p> What facets can be used? <p><code>esgpull</code> provides a handy way to print out all facet names:</p> <p><pre><code>esgpull facet\n</code></pre> <pre><code>[\n'Acknowledgement',\n  'Campaign',\n  'Conventions',\n  'Period',\n  'Science Driver',\n  'access',\n  'activity',\n  'activity_drs',\n  'activity_id',\n  ...\n]\n</code></pre></p>"},{"location":"search/#free-text-search","title":"Free-text search","text":"<p>Free-text search is performed on any term not using the <code>&lt;name&gt;:&lt;value&gt;</code> syntax. Each term is sent to the ESGF search API, which uses Apache Solr to match results.</p> <p>Solr syntax</p> <p>Solr will always try to match any of the search terms.</p> <pre><code>esgpull search surface temperature # will match either `surface` or `temperature`\n</code></pre> <p>To make sure all the words are matched, terms must be separated with <code>AND</code> and written between quotes <pre><code>esgpull search \"surface AND temperature\" # will match BOTH `surface` and `temperature`\n</code></pre></p>"},{"location":"search/#wildcard-syntax","title":"Wildcard syntax","text":"<p>A wildcard <code>*</code> can be used in both facet (value only) and free-text search, allowing for more controllable search results.</p> <p>Note that on most shells, the wildcard symbol should be inside <code>\"</code> quotes, to escape it from being expanded by the shell before <code>esgpull</code> receives any input.</p> <p>All initializations for areacella variable from piControl experiments<pre><code>esgpull search \"member_id:r1i*p1f1\" table_id:fx variable_id:areacella experiment_id:piControl\n</code></pre> <pre><code>Found 6 datasets.\n    \u2577         \u2577                                                             \n  # \u2502    size \u2502 id                                                          \n\u2576\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2574\n  0 \u2502 28.5 kB \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i2p1f1.fx.areace\u2026  \n  1 \u2502 26.9 kB \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i1p1f1.fx.areace\u2026  \n  2 \u2502 26.9 kB \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i1p1f1.fx.areace\u2026  \n  3 \u2502 26.9 kB \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i1p1f1.fx.areace\u2026  \n  4 \u2502 28.6 kB \u2502 CMIP6.CMIP.IPSL.IPSL-CM6A-LR.piControl.r1i1p1f1.fx.areace\u2026  \n  5 \u2502 28.1 kB \u2502 CMIP6.CMIP.IPSL.IPSL-CM5A2-INCA.piControl.r1i1p1f1.fx.are\u2026  \n    \u2575         \u2575\n</code></pre></p>"},{"location":"search/#case-sensitivity","title":"Case sensitivity","text":"<p>For facet search, the case must match exactly, so <code>project:cmip6</code> will give entirely different results than <code>project:CMIP6</code>.</p> <p>In the case of free-text search, the opposite is true, case is entirely insensitive, and may lead to funky results.</p>"},{"location":"search/#selection-files","title":"Selection files","text":"<p>While the search command is an already powerful tool for data discovery, its limitations come up quite often. Overcoming those limitations is the primary reason for using selection files, a multi-request description syntax.</p> <p>With its subrequests, a selection file is conceptually similar to a single-level tree structure, for which each subrequest is a leaf that specializes the root request.</p> <p>The number of requests sent to ESGF after expanding the subrequests is equal to the number of subrequests.</p> <p>A selection file is written using either Yaml/1.0 or Json, Yaml is recommended for its human-readable syntax.</p> <p>Syntax Rules</p> <ol> <li> key/value pair \u21d2 facet search term Yaml<pre><code>&lt;name&gt;: &lt;values&gt;\n</code></pre> Json<pre><code>{\n\"&lt;name&gt;\": \"&lt;values&gt;\"\n}\n</code></pre> </li> <li> <code>query</code> keyword \u21d2 free-text Yaml<pre><code>query: &lt;free-text&gt;\n</code></pre> Json<pre><code>{\n\"query\": \"&lt;free-text&gt;\"\n}\n</code></pre> </li> <li> <code>requests</code> keyword \u21d2 subrequest list Yaml<pre><code>requests:\n- &lt;request_1&gt;\n- &lt;request_2&gt;\n</code></pre> Json<pre><code>{\n\"requests\": [\n\"&lt;request_1&gt;\",\n\"&lt;request_2&gt;\"\n]\n}\n</code></pre> </li> <li> subrequests accept only facets or free-text (nesting disallowed) Yaml<pre><code>requests:\n- &lt;name_1&gt;: &lt;values_1&gt;\n&lt;name_2&gt;: &lt;values_2&gt;\nquery: &lt;free-text&gt;\n</code></pre> Json<pre><code>{\n\"requests\": [\n{\n\"&lt;name_1&gt;\": \"&lt;values_1&gt;\",\n\"&lt;name_2&gt;\": \"&lt;values_2&gt;\",\n\"query\": \"&lt;free-text&gt;\"\n}\n]\n}\n</code></pre> </li> <li> each subquery inherits the root request terms Yaml<pre><code>&lt;name_1&gt;: &lt;values_1&gt;\nrequests:\n- &lt;name_2&gt;: &lt;values_2&gt;\n- &lt;name_3&gt;: &lt;values_3&gt;\n- query: &lt;free-text&gt;\n</code></pre> Json<pre><code>{\n\"&lt;name_1&gt;\": \"&lt;values_1&gt;\",\n\"requests\": [\n{\n\"&lt;name_2&gt;\": \"&lt;values_2&gt;\"\n},\n{\n\"&lt;name_3&gt;\": \"&lt;values_3&gt;\"\n},\n{\n\"query\": \"&lt;free-text&gt;\"\n}\n]\n}\n</code></pre> Expanded query 1<pre><code>&lt;name_1&gt;: &lt;values_1&gt;\n&lt;name_2&gt;: &lt;values_2&gt;\n</code></pre> Expanded query 1<pre><code>{\n\"&lt;name_1&gt;\": \"&lt;values_1&gt;\",\n\"&lt;name_2&gt;\": \"&lt;values_2&gt;\"\n}\n</code></pre> Expanded query 2<pre><code>&lt;name_1&gt;: &lt;values_1&gt;\n&lt;name_3&gt;: &lt;values_3&gt;\n</code></pre> Expanded query 2<pre><code>{\n\"&lt;name_1&gt;\": \"&lt;values_1&gt;\",\n\"&lt;name_3&gt;\": \"&lt;values_3&gt;\"\n}\n</code></pre> Expanded query 3<pre><code>&lt;name_1&gt;: &lt;values_1&gt;\nquery: &lt;free-text&gt;\n</code></pre> Expanded query 3<pre><code>{\n\"&lt;name_1&gt;\": \"&lt;values_1&gt;\",\n\"query\": \"&lt;free-text&gt;\"\n}\n</code></pre> </li> <li> prefixing a name with <code>+</code> \u21d2 append values to the root request homonym term Yaml<pre><code>&lt;name_1&gt;: &lt;values_1&gt;\nrequests:\n- &lt;name_1&gt;: &lt;values_replaced&gt;\n&lt;name_2&gt;: &lt;values_2&gt;\n- +&lt;name_1&gt;: &lt;values_appended&gt;\n- &lt;name_3&gt;: &lt;values_3&gt;\n</code></pre> Json<pre><code>{\n\"&lt;name_1&gt;\": \"&lt;values_1&gt;\",\n\"requests\": [\n{\n\"&lt;name_1&gt;\": \"&lt;values_replaced&gt;\",\n\"&lt;name_2&gt;\": \"&lt;values_2&gt;\"\n},\n{\n\"+&lt;name_1&gt;\": \"&lt;values_appended&gt;\"\n},\n{\n\"&lt;name_3&gt;\": \"&lt;values_3&gt;\"\n}\n]\n}\n</code></pre> Expanded request 1<pre><code>&lt;name_1&gt;: &lt;values_replaced&gt;\n&lt;name_2&gt;: &lt;values_2&gt;\n</code></pre> Expanded request 1<pre><code>{\n\"&lt;name_1&gt;\": \"&lt;values_replaced&gt;\",\n\"&lt;name_2&gt;\": \"&lt;values_2&gt;\"\n}\n</code></pre> Expanded request 2<pre><code>&lt;name_1&gt;: &lt;values_1&gt;,&lt;values_appended&gt;\n</code></pre> Expanded request 2<pre><code>{\n\"&lt;name_1&gt;\": \"&lt;values_1&gt;,&lt;values_appended&gt;\"\n}\n</code></pre> Expanded request 3<pre><code>&lt;name_1&gt;: &lt;values_1&gt;\n&lt;name_3&gt;: &lt;values_3&gt;\n</code></pre> Expanded request 3<pre><code>{\n\"&lt;name_1&gt;\": \"&lt;values_1&gt;\",\n\"&lt;name_3&gt;\": \"&lt;values_3&gt;\"\n}\n</code></pre> </li> </ol> <p>Selection file for IPCC experiments on surface temperatures</p> <p>surface_temperature.yaml<pre><code>query: \"surface AND temperature\"\nrequests:\n- project: CMIP5\nexperiment: \"rcp*\"\n- project: CMIP6\nexperiment_id: \"ssp*\"\n</code></pre> Search with selection file<pre><code>esgpull search --selection-file surface_temperature.yaml --one\n</code></pre> <pre><code>Found 2346 datasets.\n    \u2577          \u2577                                                                       \n  # \u2502     size \u2502 id                                                                    \n\u2576\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2574\n  0 \u2502 363.9 GB \u2502 cmip5.output1.CNRM-CERFACS.CNRM-CM5.rcp26.day.atmos.day.r1i1p1.v201\u2026  \n    \u2575          \u2575\n</code></pre></p>"}]}