{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"esgpull is a management utility for files and datasets from ESGF 1 . Features \u00b6 Search datasets Exact search with facet:value , combined with free-text search (solr), and the ability to know what facet options remain to be set, make esgpull a handy dataset discovery tool. Free-text search and options $ esgpull search project:CMIP6 \"temperature AND ocean\" --options variable_id [ { 'variable_id' : { 'bigthetao' : 1668 , 'bigthetaoga' : 1692 , 'hfevapds' : 130 , 'hfrainds' : 122 , 'hfrunoffds' : 113 , 'ocontempdiff' : 140 , 'ocontemppadvect' : 140 , 'ocontemppmdiff' : 140 , 'ocontemprmadvect' : 140 , 'ocontemptend' : 140 , 'sitempbot' : 1304 , 'sitempsnic' : 1419 , 'sitemptop' : 2713 , 'thetao' : 1740 , 'thetaoga' : 1015 , 'thetaot' : 1367 , 'thetaot2000' : 1316 , 'thetaot300' : 1314 , 'thetaot700' : 1314 , 'tob' : 321 , 'tomint' : 39 , 'tos' : 2717 , 'tosga' : 434 , 'tossq' : 388 } } ] Exact search $ esgpull search project:CMIP6 thetao Found 1740 results. \u250f\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513 \u2503 # \u2503 size \u2503 id \u2503 \u2521\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529 \u2502 0 \u2502 64 .0 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-ESM2-1.piControl.r1i1p1f2.Omon.thetao.gn.v20181115 \u2502 \u2502 1 \u2502 21 .3 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.historical.r2i1p1f2.Omon.thetao.gn.v20181126 \u2502 \u2502 2 \u2502 64 .3 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.piControl.r1i1p1f2.Omon.thetao.gn.v20180814 \u2502 \u2502 3 \u2502 21 .3 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.historical.r1i1p1f2.Omon.thetao.gn.v20180917 \u2502 \u2502 4 \u2502 19 .3 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.1pctCO2.r1i1p1f2.Omon.thetao.gn.v20180626 \u2502 \u2502 5 \u2502 19 .2 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-ESM2-1.1pctCO2.r1i1p1f2.Omon.thetao.gn.v20181018 \u2502 \u2502 6 \u2502 19 .2 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-ESM2-1.1pctCO2.r2i1p1f2.Omon.thetao.gn.v20181031 \u2502 \u2502 7 \u2502 19 .2 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-ESM2-1.1pctCO2.r3i1p1f2.Omon.thetao.gn.v20181107 \u2502 \u2502 8 \u2502 21 .2 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.historical.r5i1p1f2.Omon.thetao.gn.v20190125 \u2502 \u2502 9 \u2502 21 .3 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.historical.r6i1p1f2.Omon.thetao.gn.v20190125 \u2502 \u2502 10 \u2502 21 .2 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.historical.r9i1p1f2.Omon.thetao.gn.v20190125 \u2502 \u2502 11 \u2502 21 .1 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-ESM2-1.historical.r1i1p1f2.Omon.thetao.gn.v20181206 \u2502 \u2502 12 \u2502 21 .2 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.historical.r7i1p1f2.Omon.thetao.gn.v20190125 \u2502 \u2502 13 \u2502 21 .2 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.historical.r8i1p1f2.Omon.thetao.gn.v20190125 \u2502 \u2502 14 \u2502 21 .2 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.historical.r10i1p1f2.Omon.thetao.gn.v20190125 \u2502 \u2502 15 \u2502 21 .3 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.historical.r3i1p1f2.Omon.thetao.gn.v20190125 \u2502 \u2502 16 \u2502 1 .3 GiB \u2502 CMIP6.DCPP.IPSL.IPSL-CM6A-LR.dcppC-amv-ExTrop-pos.r23i1p1f1.Omon.thetao.gn.v2019\u2026 \u2502 \u2502 17 \u2502 1 .3 GiB \u2502 CMIP6.DCPP.IPSL.IPSL-CM6A-LR.dcppC-amv-ExTrop-pos.r24i1p1f1.Omon.thetao.gn.v2019\u2026 \u2502 \u2502 18 \u2502 1 .3 GiB \u2502 CMIP6.DCPP.IPSL.IPSL-CM6A-LR.dcppC-amv-ExTrop-pos.r5i1p1f1.Omon.thetao.gn.v20190\u2026 \u2502 \u2502 19 \u2502 1 .3 GiB \u2502 CMIP6.DCPP.IPSL.IPSL-CM6A-LR.dcppC-amv-ExTrop-pos.r8i1p1f1.Omon.thetao.gn.v20190\u2026 \u2502 \u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Asynchronous downloads Downloads are done concurrently (up to a maximum), maximizing retrieval speed. SQLite database Each download is recorded in a SQLite database Setup \u00b6 Run pip install esgpull to install the latest release and its dependencies. Have a look at the Installation page for more ways to install. ESGF : https://pcmdi.llnl.gov/ \u21a9","title":"esgpull"},{"location":"#features","text":"Search datasets Exact search with facet:value , combined with free-text search (solr), and the ability to know what facet options remain to be set, make esgpull a handy dataset discovery tool. Free-text search and options $ esgpull search project:CMIP6 \"temperature AND ocean\" --options variable_id [ { 'variable_id' : { 'bigthetao' : 1668 , 'bigthetaoga' : 1692 , 'hfevapds' : 130 , 'hfrainds' : 122 , 'hfrunoffds' : 113 , 'ocontempdiff' : 140 , 'ocontemppadvect' : 140 , 'ocontemppmdiff' : 140 , 'ocontemprmadvect' : 140 , 'ocontemptend' : 140 , 'sitempbot' : 1304 , 'sitempsnic' : 1419 , 'sitemptop' : 2713 , 'thetao' : 1740 , 'thetaoga' : 1015 , 'thetaot' : 1367 , 'thetaot2000' : 1316 , 'thetaot300' : 1314 , 'thetaot700' : 1314 , 'tob' : 321 , 'tomint' : 39 , 'tos' : 2717 , 'tosga' : 434 , 'tossq' : 388 } } ] Exact search $ esgpull search project:CMIP6 thetao Found 1740 results. \u250f\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513 \u2503 # \u2503 size \u2503 id \u2503 \u2521\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529 \u2502 0 \u2502 64 .0 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-ESM2-1.piControl.r1i1p1f2.Omon.thetao.gn.v20181115 \u2502 \u2502 1 \u2502 21 .3 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.historical.r2i1p1f2.Omon.thetao.gn.v20181126 \u2502 \u2502 2 \u2502 64 .3 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.piControl.r1i1p1f2.Omon.thetao.gn.v20180814 \u2502 \u2502 3 \u2502 21 .3 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.historical.r1i1p1f2.Omon.thetao.gn.v20180917 \u2502 \u2502 4 \u2502 19 .3 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.1pctCO2.r1i1p1f2.Omon.thetao.gn.v20180626 \u2502 \u2502 5 \u2502 19 .2 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-ESM2-1.1pctCO2.r1i1p1f2.Omon.thetao.gn.v20181018 \u2502 \u2502 6 \u2502 19 .2 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-ESM2-1.1pctCO2.r2i1p1f2.Omon.thetao.gn.v20181031 \u2502 \u2502 7 \u2502 19 .2 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-ESM2-1.1pctCO2.r3i1p1f2.Omon.thetao.gn.v20181107 \u2502 \u2502 8 \u2502 21 .2 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.historical.r5i1p1f2.Omon.thetao.gn.v20190125 \u2502 \u2502 9 \u2502 21 .3 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.historical.r6i1p1f2.Omon.thetao.gn.v20190125 \u2502 \u2502 10 \u2502 21 .2 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.historical.r9i1p1f2.Omon.thetao.gn.v20190125 \u2502 \u2502 11 \u2502 21 .1 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-ESM2-1.historical.r1i1p1f2.Omon.thetao.gn.v20181206 \u2502 \u2502 12 \u2502 21 .2 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.historical.r7i1p1f2.Omon.thetao.gn.v20190125 \u2502 \u2502 13 \u2502 21 .2 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.historical.r8i1p1f2.Omon.thetao.gn.v20190125 \u2502 \u2502 14 \u2502 21 .2 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.historical.r10i1p1f2.Omon.thetao.gn.v20190125 \u2502 \u2502 15 \u2502 21 .3 GiB \u2502 CMIP6.CMIP.CNRM-CERFACS.CNRM-CM6-1.historical.r3i1p1f2.Omon.thetao.gn.v20190125 \u2502 \u2502 16 \u2502 1 .3 GiB \u2502 CMIP6.DCPP.IPSL.IPSL-CM6A-LR.dcppC-amv-ExTrop-pos.r23i1p1f1.Omon.thetao.gn.v2019\u2026 \u2502 \u2502 17 \u2502 1 .3 GiB \u2502 CMIP6.DCPP.IPSL.IPSL-CM6A-LR.dcppC-amv-ExTrop-pos.r24i1p1f1.Omon.thetao.gn.v2019\u2026 \u2502 \u2502 18 \u2502 1 .3 GiB \u2502 CMIP6.DCPP.IPSL.IPSL-CM6A-LR.dcppC-amv-ExTrop-pos.r5i1p1f1.Omon.thetao.gn.v20190\u2026 \u2502 \u2502 19 \u2502 1 .3 GiB \u2502 CMIP6.DCPP.IPSL.IPSL-CM6A-LR.dcppC-amv-ExTrop-pos.r8i1p1f1.Omon.thetao.gn.v20190\u2026 \u2502 \u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Asynchronous downloads Downloads are done concurrently (up to a maximum), maximizing retrieval speed. SQLite database Each download is recorded in a SQLite database","title":"Features"},{"location":"#setup","text":"Run pip install esgpull to install the latest release and its dependencies. Have a look at the Installation page for more ways to install. ESGF : https://pcmdi.llnl.gov/ \u21a9","title":"Setup"},{"location":"installation/","text":"This document covers a few ways to install esgpull , a necessary first step into being able search and download ESGF datasets. pip + github \u00b6 Run this command: pip install git+ssh://git@github.com/svenrdz/esg-pull Get the source code \u00b6 Esgpull is developed and maintained on GitHub, you can clone the public repository: git clone git@github.com:svenrdz/esg-pull Installing is then done using pip : cd esg-pull pip install . # python -m pip install . You can otherwise install the source using the targets defined in the Makefile : make install for a regular installation, make develop if you intend to contribute a pull request later on.","title":"Installation"},{"location":"installation/#pip-github","text":"Run this command: pip install git+ssh://git@github.com/svenrdz/esg-pull","title":"pip + github"},{"location":"installation/#get-the-source-code","text":"Esgpull is developed and maintained on GitHub, you can clone the public repository: git clone git@github.com:svenrdz/esg-pull Installing is then done using pip : cd esg-pull pip install . # python -m pip install . You can otherwise install the source using the targets defined in the Makefile : make install for a regular installation, make develop if you intend to contribute a pull request later on.","title":"Get the source code"},{"location":"quickstart/","text":"Quick introduction and overview of the main features. \u00b6 esgpull is a tool that simplifies usage of the ESGF Search API for data discovery, and manages procedures related to downloading and storing files from ESGF . A dataset holds data stored in one or more files , and is described by its metadata in a way that follows conventions defined by the project they belong to. A dataset's metadata is also known as its facets . Before anything, make sure esgpull is correctly installed . Initialisation \u00b6 The Context \u00b6 Let's start by fetching the number of datasets in ESGF using the Context class. Example import esgpull c = esgpull . Context () print ( c . hits ) [1509382] Here we just printed the number of datasets that can be downloaded. It is displayed as a list of a single number since it is the result of the first query . In fact, we only sent the query to a single index node 1 (defaults to IPSL), we can get results from all nodes by setting the distrib attribute to True . This will under the hood still send a single query, but that one will be sent to other nodes before coming back. Using distrib=True significantly increases response time. c . distrib = True print ( c . hits ) Narrowing down the results \u00b6 To reduce the number of search results, facets that you actually require, and that is currently done An index node is ... \u21a9","title":"Quickstart"},{"location":"quickstart/#quick-introduction-and-overview-of-the-main-features","text":"esgpull is a tool that simplifies usage of the ESGF Search API for data discovery, and manages procedures related to downloading and storing files from ESGF . A dataset holds data stored in one or more files , and is described by its metadata in a way that follows conventions defined by the project they belong to. A dataset's metadata is also known as its facets . Before anything, make sure esgpull is correctly installed .","title":"Quick introduction and overview of the main features."},{"location":"quickstart/#initialisation","text":"","title":"Initialisation"},{"location":"quickstart/#the-context","text":"Let's start by fetching the number of datasets in ESGF using the Context class. Example import esgpull c = esgpull . Context () print ( c . hits ) [1509382] Here we just printed the number of datasets that can be downloaded. It is displayed as a list of a single number since it is the result of the first query . In fact, we only sent the query to a single index node 1 (defaults to IPSL), we can get results from all nodes by setting the distrib attribute to True . This will under the hood still send a single query, but that one will be sent to other nodes before coming back. Using distrib=True significantly increases response time. c . distrib = True print ( c . hits )","title":"The Context"},{"location":"quickstart/#narrowing-down-the-results","text":"To reduce the number of search results, facets that you actually require, and that is currently done An index node is ... \u21a9","title":"Narrowing down the results"},{"location":"reference/","text":"Importing Esgpull from esgpull import Esgpull esg = Esgpull () # (1) The call instanciates all required submodules ( fs , db , etc.)","title":"API Reference"},{"location":"usage/","text":"\u203a esgpull --help Usage: esgpull [ OPTIONS ] COMMAND [ ARGS ] ... Options: -v, --version Show the version and exit. -h, --help Show this message and exit. Commands: autoremove config download get install login param remove retry search upgrade Facets \u00b6 esgpull is a tool that simplifies usage of the ESGF Search API for data discovery, and manages procedures related to downloading and storing files from ESGF . A dataset holds data stored in one or more files , and is described by its metadata in a way that follows conventions defined by the project they belong to. We also call a dataset's metadata its facets . Initialisation \u00b6 You can initialise the database's param table, with facets' names and values using the following: Fetch facets The complete list of facets (names and values) must first be fetched. CLI Python esgpull param init from esgpull import Esgpull esgpull = Esgpull () if esgpull . fetch_params (): print ( \"Params are initialised.\" ) You can list all facets with: List facet names CLI Python esgpull param list from esgpull import Esgpull , Param esgpull = Esgpull () with esgpull . db . select ( Param . name ) as stmt : print ( stmt . distinct () . scalars ) Running a Query \u00b6 The Query class is the way to send bulk queries to the Search API 1 . It is a representation for describing sets of constrained facets, or [NAME:[Value1,Value2,...]]. Using 2nd footnote 2 . Facets specifications \u21a9 This is a multiline paragraph with many words, every single word from here will be included in the second footnote, regardless of the markdown format on the line-breaks. \u21a9","title":"Usage guide"},{"location":"usage/#facets","text":"esgpull is a tool that simplifies usage of the ESGF Search API for data discovery, and manages procedures related to downloading and storing files from ESGF . A dataset holds data stored in one or more files , and is described by its metadata in a way that follows conventions defined by the project they belong to. We also call a dataset's metadata its facets .","title":"Facets"},{"location":"usage/#initialisation","text":"You can initialise the database's param table, with facets' names and values using the following: Fetch facets The complete list of facets (names and values) must first be fetched. CLI Python esgpull param init from esgpull import Esgpull esgpull = Esgpull () if esgpull . fetch_params (): print ( \"Params are initialised.\" ) You can list all facets with: List facet names CLI Python esgpull param list from esgpull import Esgpull , Param esgpull = Esgpull () with esgpull . db . select ( Param . name ) as stmt : print ( stmt . distinct () . scalars )","title":"Initialisation"},{"location":"usage/#running-a-query","text":"The Query class is the way to send bulk queries to the Search API 1 . It is a representation for describing sets of constrained facets, or [NAME:[Value1,Value2,...]]. Using 2nd footnote 2 . Facets specifications \u21a9 This is a multiline paragraph with many words, every single word from here will be included in the second footnote, regardless of the markdown format on the line-breaks. \u21a9","title":"Running a Query"}]}